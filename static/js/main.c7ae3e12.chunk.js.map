{"version":3,"sources":["axios-auth.js","Store/Actions/Actions.js","Store/Actions/ActionTypes.js","Store/Actions/Auth.js","Components/Layout/Layout.js","Components/UI/Spinner/Spinner.js","Components/Users/Users.js","Components/Home/Languages/Languages.js","Components/Home/Home.js","Components/RepoCard/RepoCard.js","Components/UserCard/UserCard.js","Components/SearchUsers/SearchUsers.js","Components/BattleUsers/BattleUsers.js","Components/Battle/Battle.js","Components/Auth/auth.js","Components/Auth/Logout/Logout.js","App.js","serviceWorker.js","Store/Reducer/popularReducer.js","Store/Reducer/searchReducer.js","Store/Reducer/auth.js","Store/Reducer/BattleUser.js","index.js"],"names":["axiosInstance","Axios","create","baseURL","clientID","secretKey","PopularErrorHandler","msg","type","errorMsg","getInput","inputUserName","userInput","target","value","auth","email","password","isSignUp","dispatch","authData","returnSecureToken","url","axios","post","then","response","token","expirationTime","data","idToken","userId","localId","expiresIn","setTimeout","catch","error","console","log","authFail","message","Layout","state","menus","name","path","Navbar","bg","to","Brand","style","color","Toggle","Collapse","className","Text","this","props","Button","variant","href","Container","map","menu","onClick","onInitFetchRepo","Component","connect","Spinner","Users","repo","card","key","id","backgroundImage","owner","avatar_url","description","stargazers_count","forks_count","watchers","Languages","lang","selectedLanguage","onSelect","intiLoading","Home","onSelectedLanguage","onInitLoading","loading","fetchedResultresult","popular","result","isLoading","language","get","languageNameResponse","languageType","fetchSelectedLanguage","items","RepoCard","repoDetail","userRepoDetail","size","html_url","textAlign","UserCard","src","userData","alt","bio","location","followers","following","public_repos","placeholder","userRepo","SearchUser","getGithubUsersInfo","e","preventDefault","fetchInputUser","username","view","userDetail","undefined","fetching","userResult","length","swal","onSubmit","class","onChange","getUserInput","search","showUserDetail","actions","response1","userRepoData","float","lineHeight","ProgressBar","now","label","blog","Battle","getFirstUserData","fetchFirstUser","getSecondUserData","fetchSecondUser","Row","Col","firstUserDetail","firstUser","showDetail","SecondUserDetail","secondUser","battle","FirstUserDetail","FirstUserData","SecondUserData","Auth","handleChange","setState","submitHandler","onAuth","switchAuthModeHandler","prevState","history","push","errorMessgae","form","Logout","initLogout","App","exact","component","SearchUsers","Boolean","window","hostname","match","intialState","popularReducer","action","searchReducer","initialState","userID","reducer","FirstUserBattledetail","SecondUserBattledetail","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","battleReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c7ae3e12.chunk.js","sourcesContent":["import Axios from 'axios';\n\n\n\nconst axiosInstance = Axios.create({\n\n    baseURL: `https://api.github.com`,\n    /* other custom settings */\n  })\n\nexport default axiosInstance;","import * as actionTypes from \"./ActionTypes\";\nimport Axios from \"../../axios-auth\";\n\nlet clientID = '9190a4c473b7adefba96';\nlet secretKey = 'b8c331efd84e3fc751255832bec489bc9cfd2077';\n// API FETCH FOR POPULAR\n\nexport const initLoading = () => {\n  return {\n    type : actionTypes.INIT_LOADING\n  }\n}\n\nexport const PopularErrorHandler = (msg) => {\n  return { \n    type : actionTypes.ERROR_HANDLER,\n    errorMsg : msg\n  }\n}\n\nexport const fetchSelectedLanguage = (response, selectedLanguage) => {\n  return {\n    type: actionTypes.UPDATE_LANGUAGE,\n    languageNameResponse: response,\n    languageType: selectedLanguage\n  };\n};\n\nexport const initLanguage = selectedLanguage => {\n\n  return dispatch => {\n    Axios.get(`/search/repositories?&client_id=${clientID}&client_secret=${secretKey}&q=stars:>1+language:${selectedLanguage}&sort=stars&order=desc`)\n    .then(response => {\n      dispatch(fetchSelectedLanguage(response.data.items, selectedLanguage));\n    })\n  };\n};\n\n// FETCHING DONE\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// GET INPUT OF SEARCH USER\n\nexport const  getInput = inputUserName => {\n\n    return {\n        type : actionTypes.GET_USER_INPUT,\n        userInput : inputUserName.target.value\n    }\n}\n\n// USERINPUT TAKEN\n\nexport const initFetchUserRepo = () => {\n  return {\n    type : actionTypes.INIT_USER_REPO\n  }\n}\n\nexport const initShowLoading = () => {\n  return {\n    type : actionTypes.INIT_SHOW_LOADING\n  }\n}\n\nexport const storeUserInput = (result) => {\n    return {\n        type:actionTypes.GET_RESPONSE_FOR_USER_INPUT,\n        userData : result\n    }\n}\n\nexport const storeUserRepo = (result) => {\n    return {\n        type : actionTypes.FETCH_USER_REPO,\n        userRepoData : result\n    }\n}\n\nexport const fetchUserInput = username => {\n    return dispatch => {\n        Axios.get(`/users/${username}?client_id=${clientID}&client_secret=${secretKey}`)\n        .then(response => {\n            dispatch(storeUserInput(response.data))\n        })\n        .catch(error => {\n          dispatch(PopularErrorHandler(error.message))\n        })\n\n        Axios.get(`/users/${username}/repos?client_id=${clientID}&client_secret=${secretKey}`)\n        .then(response1 => {\n            dispatch(storeUserRepo(response1.data))\n        })\n        .catch(error => {\n          dispatch(PopularErrorHandler(error.message))\n        })\n    }\n}\n\n////////////////////////////////////////////////////////// BATTLE/////////////////////////////////////////////////////////////\n\nexport const storeFirstUserDate = (data,) => {\n  return {\n    type : actionTypes.FETCH_FIRST_USERNAME,\n    firstUser : data,\n  }\n}\nexport const fetchfirstUser = username => {\n  return dispatch => {\n    Axios.get(`/users/${username}`)\n    .then(response => {\n      dispatch(storeFirstUserDate(response.data))\n    })\n    // .catch(error => {\n    //   dispatch(PopularErrorHandler(error.message))\n    // })\n  }\n}\n\nexport const storeSecondUserDate = (data,) => {\n  return {\n    type : actionTypes.FETCH_SECOND_USERNAME,\n    secondUser : data,\n  }\n}\nexport const fetchSecondUser = username => {\n  return dispatch => {\n    Axios.get(`/users/${username}`)\n    .then(response => {\n      dispatch(storeSecondUserDate(response.data))\n    })\n    // .catch(error => {\n    //   dispatch(PopularErrorHandler(error.message))\n    // })\n  }\n}\n","export const UPDATE_LANGUAGE = 'UPDATE_LANGUAGE';\nexport const GET_USER_INPUT = 'GET_USER_INPUT';\nexport const GET_RESPONSE_FOR_USER_INPUT = 'GET_RESPONSE_FOR_USER_INPUT';\nexport const FETCH_USER_REPO = 'FETCH_USER_REPO';\nexport const INIT_LOADING = 'INIT_LOADING';\nexport const INIT_USER_REPO = 'INIT_USER_REPO';\nexport const INIT_SHOW_LOADING = 'INIT_SHOW_LOADING';\nexport const FETCH_FIRST_USERNAME  = ' FETCH_FIRST_USERNAME';\nexport const FETCH_SECOND_USERNAME  = ' FETCH_SECOND_USERNAME';\nexport const ERROR_HANDLER  = 'ERROR_HANDLER';\nexport const AUTH_START  = 'AUTH_START';\nexport const AUTH_SUCCESS  = 'AUTH_SUCCESS';\nexport const AUTH_FAIL  = 'AUTH_FAIL';\nexport const LOGOUT  = 'LOGOUT';\n","import * as actionTypes from './ActionTypes'\nimport axios from 'axios'\n\nexport const authStart = () => {\n    return {\n        type : actionTypes.AUTH_START\n    }\n}\n\n\nexport const authSuccess = (token,userId) => {\n    return {\n        type : actionTypes.AUTH_SUCCESS,\n        userId : userId,\n        idToken : token\n    }\n}\n\nexport const logout = () => {\n    return{\n        type : actionTypes.LOGOUT\n    }\n}\n\nexport const checkLogout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        },expirationTime * 1000)\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type : actionTypes.AUTH_FAIL,\n        error : error\n    }\n}\n\nexport const auth  = (email,password,isSignUp) => {\n    return dispatch => {\n        dispatch(authStart())\n        const authData = {\n            email:email,\n            password:password,\n            returnSecureToken : true\n        }\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBUNvWhghSF0MnyzC-j9ONXUWpyns2EGEE'\n        if(!isSignUp)\n        {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBUNvWhghSF0MnyzC-j9ONXUWpyns2EGEE'\n        }\n        axios.post(url,authData)\n        .then(response => {\n            dispatch(authSuccess(response.data.idToken,response.data.localId))\n            dispatch(checkLogout(response.data.expiresIn))\n        })\n        .catch(error => {\n            console.log(error)\n            dispatch(authFail(error.response.data.error.message))\n        })\n    }\n}","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport {Switch,Link} from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport {connect} from 'react-redux'\nimport { Button } from 'react-bootstrap'\nimport * as actions from '../../Store/Actions/index'\nclass Layout extends Component {\n   state = {\n    menus : [\n      {name : \"Popular\",path: '/'},\n      {name : \"Battle\",path: '/battle'},\n      {name : \"Search\",path: '/search'},\n    ]\n   }\n  render() {\n    return (\n         <div>\n      <Navbar bg=\"dark\">\n       <Link to=\"/\"><Navbar.Brand style = {{color:'white'}}>Github Battle App</Navbar.Brand></Link>\n        <Navbar.Toggle />\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Text style = {{color:'white'}}>\n          {\n          this.props.token ? \n          <Link to = \"/logout\"><Button variant=\"dark\" style = {{color:'white'}} href=\"#login\">Logout</Button></Link>\n          :\n          <Link to = \"/authenticate\"><Button variant=\"dark\" style = {{color:'white'}} href=\"#login\">Authenticate</Button></Link>\n        }\n          </Navbar.Text>\n        </Navbar.Collapse>\n      </Navbar>\n      <Container>\n        <Switch>\n          <ul className = \"navOptions\">\n            {this.state.menus.map(menu => {\n              return <li><Link to={menu.path} onClick = {this.props.onInitFetchRepo}>{menu.name}</Link></li>\n            })}\n          </ul>\n          \n        </Switch>\n      </Container>\n    </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return{\n    token : state.auth.token\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitFetchRepo : () => dispatch(actions.initFetchUserRepo())\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Layout);\n","import React from 'react';\nimport './Spinner.css'\nconst Spinner = () => {\n    return (\n        <div className=\"loader\">Loading...</div>\n    )\n}\n\nexport default Spinner;","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nconst Users = props => {\n  let repo;\n  repo = props.data.map(card => {\n      return (\n        <div className=\"cards\" key={card.id}>\n          <div className=\"card-item\">\n            <div\n              className=\"card-image\"\n              style={{ backgroundImage: `url(${card.owner.avatar_url})` }}\n            ></div>\n            <div className=\"card-info\">\n              <h2 className=\"card-title\">{card.name}</h2>\n              <p className=\"card-intro\">{card.description}</p>\n              <p>\n                <i className=\"fas fa-star\"></i> Stars - {card.stargazers_count}\n              </p>\n              <p>\n                <i className=\"fa fa-utensils\"></i> Forks - {card.forks_count}\n              </p>\n              <p>\n                <i className=\"fas fa-clock\"></i> Watchers - {card.watchers}\n              </p>\n            </div>\n          </div>\n        </div>\n      );\n    })\n\n  return (\n    <div>\n      <Container>{repo}</Container>\n    </div>\n  );\n};\n\nexport default Users;\n","import React from \"react\";\n\n const Languages = props => {\n  const languages = [\n    \"All\",\n    \"Javascript\",\n    \"Ruby\",\n    \"Java\",\n    \"CSS\",\n    \"Python\",\n    \"PHP\",\n    \"Shell\"\n  ];\n\n  return (\n    <ul className=\"navOptions\">\n      {languages.map(lang => {\n        return <li\n          className={lang === props.selectedLanguage ? \"selected\" : \"\"}\n          onClick={() => {props.onSelect(lang); props.intiLoading()}}\n          key={lang}>\n          <a>{lang}</a>\n        </li>;\n      })}\n    </ul>\n  );\n};\n\nexport default Languages;","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Users from '../Users/Users'\nimport SelectLanguage from './Languages/Languages'\nimport { connect } from 'react-redux'\nimport * as actions from '../../Store/Actions/index'\nimport  Spinner  from \"../UI/Spinner/Spinner\";\nclass Home extends Component {\n  componentDidMount() {\n    this.props.onSelectedLanguage(this.props.selectedLanguage);\n  }\n  render() {\n    return (\n      <div>\n        <Container>\n          <SelectLanguage  onSelect={this.props.onSelectedLanguage} intiLoading = {this.props.onInitLoading}  selectedLanguage = {this.props.selectedLanguage} ></SelectLanguage>\n        </Container>\n       {\n         !this.props.loading ?  <Users data = {this.props.fetchedResultresult} loading={this.props.loading}/> : <Spinner />\n       }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    fetchedResultresult : state.popular.result,\n    selectedLanguage : state.popular.selectedLanguage,\n    loading : state.popular.isLoading\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSelectedLanguage : (language) => dispatch(actions.initLanguage(language)),\n    onInitLoading : () => dispatch(actions.initLoading())\n  }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);\n","import React from \"react\";\nimport \"./RepoCard.css\";\nimport Button from 'react-bootstrap/Button'\nconst RepoCard = props => {\n  let repoDetail;\n  console.log(props.userRepoDetail)\n  repoDetail = props.userRepoDetail.map(repo => {\n    return (\n        <div className=\"col\" key={repo.id}>\n          <div className=\"card shadow--sm\">\n            <div className=\"card--body\">\n              <p className=\"card--text card--size-state\">{repo.name}</p>\n              <p className=\"card--text\"><i className=\"fas fa-star\"></i> Stars -  {repo.stargazers_count}</p>\n              <p className=\"card--text\"><i className=\"far fa-hdd\"></i> Size -  {repo.size}</p>\n              <p className=\"card--text\"><i className=\"fa fa-code\"></i> Language -  {repo.language ? repo.language : 'Unknown'}</p>\n              <a href = {repo.html_url} target=\"_blank\"><Button variant=\"dark\">Repo</Button></a>\n            </div>\n          </div>\n        </div>\n    );\n  });\n  return (\n    <div>\n      <h2 style={{ textAlign: \"center\" }}>Repositories</h2>\n\n      <div className=\"container\">{repoDetail}</div>\n    </div>\n  );\n};\n\nexport default RepoCard;\n","import React from \"react\";\nimport RepoCard from '../RepoCard/RepoCard'\nconst UserCard = props => {\n  console.log(props)\n  let UserCard;\n  UserCard = (\n    <div className=\"wrapper\">\n      <div className=\"profile-card js-profile-card\">\n        <div className=\"profile-card__img\">\n          <img src={props.userData.avatar_url} alt=\"profile card\" />\n        </div>\n\n        <div className=\"profile-card__cnt js-profile-cnt\">\n          <div className=\"profile-card__name\">{props.userData.name}</div>\n          <div className=\"profile-card__txt\">{props.userData.bio}</div>\n          <div className=\"profile-card-loc\">\n            <span className=\"profile-card-loc__txt\">\n              {props.userData.location ? props.userData.location : null}{\" \"}\n            </span>\n          </div>\n\n          <div className=\"profile-card-inf\">\n            <div className=\"profile-card-inf__item\">\n              <div className=\"profile-card-inf__title\">\n                {props.userData.followers}\n              </div>\n              <div className=\"profile-card-inf__txt\">Followers</div>\n            </div>\n\n            <div className=\"profile-card-inf__item\">\n              <div className=\"profile-card-inf__title\">\n                {props.userData.following}\n              </div>\n              <div className=\"profile-card-inf__txt\">Following</div>\n            </div>\n\n            <div className=\"profile-card-inf__item\">\n              <div className=\"profile-card-inf__title\">\n                {props.userData.public_repos}\n              </div>\n              <div className=\"profile-card-inf__txt\">Public Repo</div>\n            </div>\n\n            <div className=\"profile-card-inf__item\">\n              <div className=\"profile-card-inf__title\">85</div>\n              <div className=\"profile-card-inf__txt\">Works</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"profile-card-message js-message\">\n          <form className=\"profile-card-form\">\n            <div className=\"profile-card-form__container\">\n              <textarea placeholder=\"Say something...\"></textarea>\n            </div>\n\n            <div className=\"profile-card-form__bottom\">\n              <button className=\"profile-card__button button--blue js-message-close\">\n                Send\n              </button>\n\n              <button className=\"profile-card__button button--gray js-message-close\">\n                Cancel\n              </button>\n            </div>\n          </form>\n\n          <div className=\"profile-card__overlay js-message-close\"></div>\n        </div>\n      </div>\n    </div>\n  );\n  return (\n    <div>\n      {UserCard}\n      <RepoCard userRepoDetail = {props.userRepo} />\n    </div>\n    \n  )\n};\n\nexport default UserCard;\n","import React, { Component } from \"react\";\nimport { InputGroup, FormControl, Container } from \"react-bootstrap\";\nimport Axios from \"../../axios-auth\";\nimport UserCard from \"../UserCard/UserCard\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport * as actions from \"../../Store/Actions/index\";\nimport swal from 'sweetalert'\nclass SearchUser extends Component {\n  getGithubUsersInfo = e => {\n    e.preventDefault();\n    this.props.onInitFetchRepo();\n    this.props.fetchInputUser(this.props.username);\n  };\n  render() {\n    let view;\n    if (this.props.userDetail) {\n      if (this.props.fetching === undefined) {\n        view = null;\n      }\n      if (!this.props.fetching) {\n        view = (\n          <UserCard\n            userData={this.props.userResult}\n            userRepo={this.props.userRepo}\n          />\n        );\n      }\n    } else {\n      if (this.props.fetching) {\n        view = <Spinner />;\n      }\n    \n    }\n    if(this.props.errorMsg.length > 0 ) {\n      swal(\"error!\", this.props.errorMsg, \"error\");\n   }\n    return (\n      <div>\n        <Container className=\"search\">\n          <form className=\"search-container\" onSubmit={this.getGithubUsersInfo}>\n            <h3>Enter Username</h3>\n            <input\n              type=\"text\"\n              class=\"search-bar\"\n              placeholder=\"Enter Github Username\"\n              onChange={this.props.getUserInput}\n            />\n            <a onClick={this.getGithubUsersInfo}>\n              <img\n                className=\"search-icon\"\n                src=\"http://www.endlessicons.com/wp-content/uploads/2012/12/search-icon.png\"\n              />\n            </a>\n          </form>\n        </Container>\n        {view}\n        {/* {this.props.errorMsg ? swal(\"Good job!\", \"You clicked the button!\", \"success\") : '' } */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.search.username,\n    userResult: state.search.result,\n    userRepo: state.search.userRepo,\n    userDetail: state.search.showUserDetail,\n    fetching: state.search.fetching,\n    errorMsg : state.search.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserInput: e => dispatch(actions.getInput(e)),\n    fetchInputUser: username => dispatch(actions.fetchUserInput(username)),\n    onInitFetchRepo: () => dispatch(actions.initShowLoading())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchUser);\n","import React from \"react\";\nimport { Container, Button } from \"react-bootstrap\";\nimport './BattleUsers.css'\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nconst Users = props => {\n  let repo;\n  repo = \n        <div className=\"cardss single\" key={props.data.id}>\n          <div className=\"card-item\">\n            <div\n              className=\"card-image\"\n              style={{ backgroundImage: `url(${props.data.avatar_url})` }}\n            ></div>\n            <div className=\"card-info\">\n              <h2 className=\"card-title\">{props.data.name}</h2>\n              <p className=\"card-intro\">{props.data.bio}</p>\n              <p >\n                <i style = {{float : 'left',lineHeight: '44px'}} className=\"fas fa-users\"> Followers - {props.data.followers} </i> \n\n              </p>\n              <ProgressBar now={props.data.followers} label={`${props.data.followers}`} />\n\n              <p>\n                <i style = {{float : 'left',lineHeight: '44px'}} className=\"fas fa-toolbox\">  Public repo - {props.data.public_repos}</i>\n              </p>\n              <ProgressBar now={props.data.public_repos} label={`${props.data.public_repos}`} />\n\n              <p>\n                <i style = {{float : 'left',lineHeight: '44px'}} className=\"fas fa-blog\"> Blog - <a href =  {\"http://\"+props.data.blog} target =\"_blank\">{props.data.blog}</a></i> \n              </p>\n            </div>\n          </div>\n        </div>\n      \n\n  return (\n    <div>\n      <Container>\n      {repo}\n      </Container>\n    </div>\n  );\n};\n\nexport default Users;\n","import React, { Component } from \"react\";\nimport { Container, Row , Col, Button} from 'react-bootstrap'\nimport './Battle.css'\nimport {connect} from 'react-redux' \nimport * as actions from '../../Store/Actions/index'\nimport Users from '../Users/Users'\nimport BattleUsers from '../BattleUsers/BattleUsers'\nimport ShowUsers from '../ShowUser/ShowUsers'\nclass  Battle extends Component {\n\n  getFirstUserData = (e) => {\n    e.preventDefault();\n    \n    this.props.fetchFirstUser(this.props.username)\n  }\n  getSecondUserData = (e) => {\n    e.preventDefault();\n    this.props.fetchSecondUser(this.props.username)\n  }\n  render(){\n    return (\n      <div className = \"battle\">\n         <Row>\n         <Col>\n         <form className=\"search-container\" onSubmit = {this.getFirstUserData}>\n             <h3 className = \"heading\">Enter Username</h3>\n             <input\n               type=\"text\"\n               id=\"search2\"\n               className=\"search-bar\"\n               placeholder=\"Enter First Username\"\n               onChange={this.props.getUserInput}\n             />\n             <a >\n               <img\n                 className=\"search-icon\"\n                 src=\"http://www.endlessicons.com/wp-content/uploads/2012/12/search-icon.png\"\n                 onClick = {this.getFirstUserData}\n\n               />\n             </a>\n           </form>\n           {this.props.firstUserDetail ? <BattleUsers type=\"single\" data = {this.props.firstUser} loading={this.props.showDetail}/> : null}\n         </Col>\n         <Col>\n         <form className=\"search-container\" onSubmit = {this.getSecondUserData}>\n             <h3 className = \"heading\">Enter Username</h3>\n             <input\n               type=\"text\"\n               id=\"search1\"\n               className=\"search-bar\"\n               placeholder=\"Enter Second Username\"\n               onChange={this.props.getUserInput}\n             />\n             <a >\n               <img\n                 className=\"search-icon\"\n                 src=\"http://www.endlessicons.com/wp-content/uploads/2012/12/search-icon.png\"\n                 onClick = {this.getSecondUserData}\n               />\n             </a>\n           </form>\n           {this.props.SecondUserDetail ? <BattleUsers type=\"single\" data = {this.props.secondUser} loading={this.props.showDetail}/> : null}\n\n         </Col>\n       </Row>\n\n      </div>\n   );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    username : state.battle.username,\n    firstUserDetail :state.battle.FirstUserDetail,\n    SecondUserDetail :state.battle.SecondUserDetail,\n    firstUser : state.battle.FirstUserData,\n    secondUser : state.battle.SecondUserData\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserInput: e => dispatch(actions.getInput(e)),\n    fetchFirstUser : (username) => dispatch(actions.fetchfirstUser(username)),\n    fetchSecondUser : (username) => dispatch(actions.fetchSecondUser(username)),\n    \n\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Battle);\n","import React, { Component } from \"react\";\nimport * as actions from \"../../Store/Actions/Auth\";\nimport { connect } from \"react-redux\";\nimport \"./auth.css\";\nimport { getInput } from \"../../Store/Actions\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nclass Auth extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    isSignUp: true\n  };\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  submitHandler = e => {\n    e.preventDefault();\n    this.props.onAuth(\n      this.state.email,\n      this.state.password,\n      this.state.isSignUp\n    );\n  \n  };\n\n  componentWillUpdate(){\n    if (this.props.token) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  switchAuthModeHandler = () => {\n    this.setState(prevState => {\n      return {\n        isSignUp: !prevState.isSignUp\n      };\n    });\n  };\n  render() {\n    let errorMessgae = null;\n    if (this.props.error) {\n      errorMessgae = (\n        <p style={{ color: \"red\" }} className=\"text-center\">\n          {this.props.error}\n        </p>\n      );\n    }\n    let form = (\n      <div class=\"Authcontainer\">\n        <div className=\"form-background\">\n          <h1>Sign Up</h1>\n          <br />\n          {errorMessgae}\n          <form onSubmit={this.submitHandler}>\n            <input\n              type=\"email\"\n              onChange={e => this.handleChange(e)}\n              name=\"email\"\n              placeholder=\"Email\"\n            />\n            <br />\n            <input\n              type=\"password\"\n              onChange={e => this.handleChange(e)}\n              name=\"password\"\n              placeholder=\"Password\"\n            />\n            <br />\n            <br />\n            <input type=\"submit\" value=\"Submit\" />\n            <br />\n            <br />\n          </form>\n          <input\n            onClick={this.switchAuthModeHandler}\n            type=\"submit\"\n            value={this.state.isSignUp ? \"Sign In\" : \"Sign Up\"}\n          />\n        </div>\n      </div>\n    );\n\n    if (this.props.isLoading) {\n      form = <Spinner />;\n    }\n    return <div>{form}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.auth.loading,\n    error: state.auth.error,\n    token : state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, isSignUp) =>\n      dispatch(actions.auth(email, password, isSignUp))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport  {Redirect}  from 'react-router-dom'\nimport * as actions from '../../../Store/Actions/index'\n\nclass Logout extends Component {\n\n    componentDidMount(){\n        this.props.initLogout()\n    }\n\n    render(){\n        return <Redirect to = \"/authenticate\" />\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        initLogout : () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(Logout)","import React, { Component } from \"react\";\nimport Layout from \"./Components/Layout/Layout\";\nimport { Route, Switch} from \"react-router-dom\";\nimport Home from './Components/Home/Home'\nimport SearchUsers from './Components/SearchUsers/SearchUsers'\nimport Battle from './Components/Battle/Battle'\nimport \"./App.css\";\nimport Auth from './Components/Auth/auth'\nimport Logout from './Components/Auth/Logout/Logout'\nclass App extends Component {\n  render() {\n    return (\n      <div className = \"body\">\n        <Layout />\n        <Switch>\n          <Route path=\"/\" exact component = {Home} />\n          <Route path=\"/authenticate\"  component = {Auth} />\n          <Route path=\"/Battle\" component = {Battle} />\n          <Route path=\"/logout\" component = {Logout} />\n          <Route path=\"/Search\" component = {SearchUsers}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../Actions/ActionTypes'\n\nconst intialState = {\n    selectedLanguage: 'All',\n    result : [],\n    isLoading:true\n}\nconst popularReducer = (state = intialState,action) => {\n    switch (action.type){\n\n        case actionTypes.INIT_LOADING : {\n            return {\n                ...state,\n                isLoading : true,\n            }\n        }\n\n        case  actionTypes.UPDATE_LANGUAGE : {\n            return {\n                ...state,\n                result : action.languageNameResponse,\n                selectedLanguage : action.languageType,\n                isLoading :false,\n            }\n        }\n        default : \n            return state;\n    }\n\n\n}\n\nexport default popularReducer;","import * as actionTypes from \"../Actions/ActionTypes\";\n\nconst intialState = {\n  username: \"\",\n  result: [],\n  userRepo:[],\n  showUserDetail: false,\n  error:''\n};\nconst searchReducer = (state = intialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_USER_INPUT: {\n      return {\n        ...state,\n        username: action.userInput,\n        error :''\n      };\n    }\n    \n    case actionTypes.INIT_SHOW_LOADING: {\n      return {\n        ...state,\n        fetching : true,\n        showUserDetail: false,\n\n        error : '',\n      };\n    }\n\n    case actionTypes.INIT_USER_REPO: {\n      return {\n        ...state,\n        showUserDetail : false,\n        error : ''\n      };\n    }\n\n    case actionTypes.ERROR_HANDLER : {\n      return {\n        ...state,\n        error : action.errorMsg,\n        fetching:false\n\n      }\n    }\n\n    case actionTypes.GET_RESPONSE_FOR_USER_INPUT: {\n      return {\n        ...state,\n        result : action.userData,\n        showUserDetail : true,\n        fetching : true\n      };\n    }\n\n    case actionTypes.FETCH_USER_REPO : {\n        return {\n            ...state,\n            userRepo : action.userRepoData,\n            fetching : false\n\n        }\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import * as actionTypes from '../Actions/ActionTypes'\n\nconst initialState = {\n    token : null,\n    userID : null,\n    error :null,\n    loading:false\n}\n\nconst reducer = (state = initialState ,action) => {\n\n    switch(action.type){\n        case actionTypes.AUTH_START : \n        return {\n            ...state,\n            error : null,\n            loading :true\n        }\n        case actionTypes.AUTH_SUCCESS : \n        return {\n            ...state,\n            token : action.idToken,\n            userID : action.userId,\n            error : null,\n            loading :false\n        }\n        case actionTypes.LOGOUT : \n        return {\n            ...state,\n            token : null,\n            userID:null\n        }\n        case actionTypes.AUTH_FAIL : \n        return {\n            ...state,\n            error : action.error,\n            loading : false\n        }\n        default : \n        return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../Actions/ActionTypes'\n\nconst intialState = {\n    FirstUserData : [],\n    SecondUserData : [],\n    username : '',\n    FirstUserDetail : false,\n    SecondUserDetail : false,\n    FirstUserBattledetail:false,\n    SecondUserBattledetail:false\n    // isLoading:true\n}\nconst popularReducer = (state = intialState,action) => {\n    switch (action.type){\n        case actionTypes.GET_USER_INPUT: {\n            return {\n              ...state,\n              username: action.userInput\n            };\n          }\n\n        case  actionTypes.FETCH_FIRST_USERNAME : {\n            return {\n                ...state,\n                FirstUserData : action.firstUser,\n                FirstUserDetail : true\n            }\n        }\n        case  actionTypes.FETCH_SECOND_USERNAME : {\n            return {\n                ...state,\n                SecondUserData : action.secondUser,\n                SecondUserDetail : true\n\n            }\n        }\n        default : \n            return state;\n    }\n\n\n}\n\nexport default popularReducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { createStore, applyMiddleware, compose,combineReducers } from \"redux\";\nimport popularReducer from \"./Store/Reducer/popularReducer\";\nimport searchReducer from './Store/Reducer/searchReducer'\nimport thunk from \"redux-thunk\";\nimport authReducer from './Store/Reducer/auth'\nimport battleReducer from './Store/Reducer/BattleUser'\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n  popular : popularReducer,\n  search : searchReducer,\n  battle : battleReducer,\n  auth : authReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}